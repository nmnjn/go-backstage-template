apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: docs-template
  title: Documentation Template
  description: Create a new standalone documentation project
  tags:
    - recommended
    - techdocs
    - mkdocs
spec:
  owner: backstage/techdocs-core
  type: documentation
  parameters:
    - title: Fill in some steps
      required:
        - name
        - description
      properties:
        name:
          title: Name
          type: string
          description: Unique name of the component
          'ui:field': EntityNamePicker
          'ui:autofocus': true
        description:
          title: Description
          type: string
          description: A description for the component
        owner:
          title: Owner
          type: string
          description: Owner of the component
          'ui:field': OwnerPicker
          'ui:options':
            allowedKinds:
              - Group
    - title: Choose a location
      required:
        - repoUrl
      properties:
        repoUrl:
          title: Repository Location
          type: string
          'ui:field': RepoUrlPicker
          'ui:options':
            allowedHosts:
              - github.com
  steps:
    - id: fetch
      name: Template Docs Skeleton
      action: 'fetch:template'
      input:
        url: ./skeleton
        values:
          name: '${{ parameters.name }}'
          description: '${{ parameters.description }}'
          destination: '${{ parameters.repoUrl | parseRepoUrl }}'
          owner: '${{ parameters.owner }}'
    - id: publish
      name: Publish
      action: 'publish:github'
      input:
        allowedHosts:
          - github.com
        description: 'This is ${{ parameters.name }}'
        repoUrl: '${{ parameters.repoUrl }}'
    - id: register
      name: Register
      action: 'catalog:register'
      input:
        repoContentsUrl: '${{ steps.publish.output.repoContentsUrl }}'
        catalogInfoPath: /catalog-info.yaml
  output:
    remoteUrl: '${{ steps.publish.output.remoteUrl }}'
    entityRef: '${{ steps.register.output.entityRef }}'
